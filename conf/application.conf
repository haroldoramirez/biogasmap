# This is the main configuration file for the application.
# ~~~~~
application.name=biogasmap

akka.log-level = "WARN"

# The public facing name of the site. Used when sending reset emails.
#server.hostname="localhost:9000"
#server.hostname="https://sheltered-wave-98757.herokuapp.com/"
#server.hostname="biogasmap.cibiogas.org"

# application.context=/biogasmap/
# play.http.context=

# The application languages
# ~~~~~
play.i18n.langs = ["en", "pt", "es"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route naoApagar is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router naoApagar `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Evolutions
# ~~~~~
# You can disable evolutions if needed
play.evolutions.enabled=true

# You can disable evolutions for a specific datasource if necessary
play.evolutions.db.default.enabled=true

# para producao
play.evolutions.db.default.autoApply=true

# apenas para testes CUIDADO! - necessario apenas quando fizer o primeiro deploy da aplicacao!
play.evolutions.db.default.autoApplyDowns=true

# Setting a custom root URL
#play.http.context="/architectplay-1.0-SNAPSHOT/"

# Root logger:
#logger.root=ERROR

# Logger used by the framework:
#logger.play=INFO

# Logger provided to your application:
#logger.application=DEBUG

# Logger for a third party library
#logger.org.springframework=INFO

ebean.default = ["models.*"]

# other configs para aceitar arquivos com tamanhos maiores
#play.http.parser.maxDiskBuffer=100MB
#parsers.anyContent.maxLength=100MB

# Assets configuration cache
# ~~~~~ Adicionar uma hora de cache para essas dependencias
# BOOTSTRAP
play.assets.cache."/public/bootstrap-3.3.7/dist/css/bootstrap.min.css"="max-age=3600"
play.assets.cache."/public/bootstrap-3.3.7/dist/js/bootstrap.min.js"="max-age=3600"

# OPENLAYERS
play.assets.cache."/public/OpenLayers3/build/ol.js"="max-age=3600"

# MATERIAL DESIGN
play.assets.cache."/public/bower_components/material-design-lite/material.min.css"="max-age=3600"
play.assets.cache."/public/bower_components/material-design-lite/material.min.js"="max-age=3600"

# JS QUERY
play.assets.cache."/public/bower_components/jquery/dist/jquery.min.js"="max-age=3600"
play.assets.cache."/public/bower_components/jquery-ui/jquery-ui.min.js"="max-age=3600"

# PDF MAKE
play.assets.cache."/public/bower_components/pdfmake/build/pdfmake.min.js"="max-age=3600"

# Server
# ~~~~~
#http.path=/architectplay-1.0-SNAPSHOT
#http.port=8888

#comando para criar uma dist universal
#sbt universal:package-zip-tarball

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this naoApagar.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
# Apos digitar no terminal activator digite, playGenerateSecret
# Exemplo [my-first-app] $ playGenerateSecret
# Atualiza o secret
# Exemplo [my-first-app] $ playUpdateSecret
play.crypto.secret="^2/E>TCv7XAoUKvZ=lLu3xtd:s:igd@wpJ>gLTrEEEMBvu8kON3QT3Zlk6Hb>AKc"

# Modulos adicionais para os filters
play.modules {
  enabled += "play.filters.csrf.CSRFModule"
  enabled += "play.filters.cors.CORSModule"
  enabled += "play.filters.headers.SecurityHeadersModule"
}

# Filter - CORS and Cookie configurations
play.filters {

  # CSRF config
  csrf {

    # Token configuration
    token {
      # The token name
      name = "csrfToken"

      # Whether tokens should be signed or not
      sign = true
    }

    # Cookie configuration
    cookie {
      # If non null, the CSRF token will be placed in a cookie with this name
      name = null

      # Whether the cookie should be set to secure
      secure = ${play.http.session.secure}

      # Whether the cookie should have the HTTP only flag set
      httpOnly = false
    }

    # How much of the body should be buffered when looking for the token in the request body
    body.bufferSize = ${play.http.parser.maxMemoryBuffer}

    # Header configuration
    header {

      # The name of the header to accept CSRF tokens from.
      name = "Csrf-Token"

      # Whether simple tokens in the header should allow CSRF checks to be bypassed.
      bypass = true
    }

    # Method lists
    method {
      # If non empty, then requests will be checked if the method is not in this list.
      whiteList = []

      # The black list is only used if the white list is empty.
      # Only check methods in this list.
      blackList = ["POST"]
    }

    # Content type lists
    contentType {
      # If non empty, then requests will be checked if the content type is not in this list.
      whiteList = []

      # The black list is only used if the white list is empty.
      # Only check content types in this list.
      blackList = ["application/x-www-form-urlencoded", "multipart/form-data", "text/plain"]
    }

    # The error handler.
    # Used by Play's built in DI support to locate and bind a request handler.  Must be one of the following:
    # - A FQCN that implements play.filters.csrf.CSRF.ErrorHandler (Scala).
    # - A FQCN that implements play.filters.csrf.CSRFErrorHandler (Java).
    # - provided, indicates that the application has bound an instance of play.filters.csrf.CSRF.ErrorHandler through some
    #   other mechanism.
    # If null, will attempt to load a class called CSRFErrorHandler in the root package, otherwise if that's
    # not found, will default to play.filters.csrf.CSRF.CSRFHttpErrorHandler, which delegates to the configured
    # HttpRequestHandler.
    errorHandler = null
  }

  # Security headers filter configuration
  headers {

    # The X-Frame-Options header. If null, the header is not set.
    frameOptions = "DENY"

    # The X-XSS-Protection header. If null, the header is not set.
    xssProtection = "1; mode=block"

    # The X-Content-Type-Options header. If null, the header is not set.
    contentTypeOptions = "nosniff"

    # The X-Permitted-Cross-Domain-Policies header. If null, the header is not set.
    permittedCrossDomainPolicies = "master-only"

    # The Content-Security-Policy header. If null, the header is not set.
    contentSecurityPolicy = "default-src 'self'"
  }

  # CORS filter configuration
  cors {

    # The path prefixes to filter.
    pathPrefixes = ["/"]

    # The allowed origins. If null, all origins are allowed.
    allowedOrigins = null

    # The allowed HTTP methods. If null, all methods are allowed
    allowedHttpMethods = ["GET", "POST", "PUT", "DELETE"]

    # The allowed HTTP headers. If null, all headers are allowed.
    allowedHttpHeaders = null

    # The exposed headers
    exposedHeaders = []

    # Whether to support credentials
    supportsCredentials = true

    # The maximum amount of time the CORS meta data should be cached by the client
    preflightMaxAge = 1 hour
  }

}

# Session configuration
play.http.session = {

  # The cookie name
  cookieName = "BIOGASMAP_SESSION"

  # Whether the secure attribute of the cookie should be set to true
  secure = true

  # The max age to set on the cookie.
  # If null, the cookie expires when the user closes their browser.
  # An important thing to note, this only sets when the browser will discard the cookie.
  maxAge = null

  # Whether the HTTP only attribute of the cookie should be set to true
  httpOnly = true

  # The value of the SameSite attribute of the cookie. Set to null for no SameSite attribute.
  # Possible values are "lax" and "strict". If misconfigured it's set to null.
  sameSite = "lax"

  # The domain to set on the session cookie
  # If null, does not set a domain on the session cookie.
  domain = null

  # The session path
  # Must start with /.
  path = ${play.http.context}

  jwt {
    # The JWT signature algorithm to use on the session cookie
    # uses 'alg' https://tools.ietf.org/html/rfc7515#section-4.1.1
    signatureAlgorithm = "HS256"

    # The time after which the session is automatically invalidated.
    # Use 'exp' https://tools.ietf.org/html/rfc7519#section-4.1.4
    expiresAfter = ${play.http.session.maxAge}

    # The amount of clock skew to accept between servers when performing date checks
    # If you have NTP or roughtime synchronizing between servers, you can enhance
    # security by tightening this value.
    clockSkew = 5 minutes

    # The claim key under which all user data is stored in the JWT.
    dataClaim = "data"
  }
}

# Database configuration

# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
# Database configuration for memory
#
#db.default.driver=org.h2.Driver
#db.default.url="jdbc:h2:mem:play"
#db.default.username=sa
#db.default.password=""
#
#
# Database configuration for postgresql developer ambient
#
#
# para ambiente de desenvolvimento
db.default.driver=org.postgresql.Driver
db.default.url="postgres://sa_biogasmap:senha_biogasmap@127.0.0.1:5432/biogasmap"
db.default.username=sa_biogasmap
db.default.password="senha_biogasmap"
db.default.partitionCount=1
db.default.maxConnectionsPerPartition=5
db.default.minConnectionsPerPartition=5
#
# para ambiente pti
#db.default.driver=org.postgresql.Driver
#db.default.url="postgres://sa_mapbiogas:UpNbd6HDMAww8h4xGexscG@cibiogas-pgsql.fpti.pti.org.br:5432/mapbiogas"
#db.default.username=sa_mapbiogas
#db.default.password="UpNbd6HDMAww8h4xGexscG"
#db.default.partitionCount=1
#db.default.maxConnectionsPerPartition=5
#db.default.minConnectionsPerPartition=5
#
# para ambiente mwsi
#db.default.driver=org.postgresql.Driver
#db.default.url="postgres://biogasmap:123biogasmap321@127.0.0.1:5432/biogasmap"
#db.default.username=biogasmap
#db.default.password="123biogasmap321"
#db.default.partitionCount=1
#db.default.maxConnectionsPerPartition=5
#db.default.minConnectionsPerPartition=5
#

# other files
include "file.conf"
